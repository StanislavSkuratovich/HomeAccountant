@page "/records/{id}"
@inject IUnitOfWork _unit;
@inject NavigationManager _navigator;
<h3>Details</h3>

Change id: @id
<button @onclick="BackToList">Back to list</button>
@if (null == record)
{
    <LoadingMessage Message="Loading data.."></LoadingMessage>
}

<table>
    <thead>
        <tr>
            <th>
                UserId
            </th>

            <th>
                Amount
            </th>
            <th>
                Date
            </th>
            <th>
                MoneyChangeTypeId
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                @record.UserId
            </td>
            <td>
                @record.Amount
            </td>
            <td>
                @record.Date.Value.ToShortDateString()
            </td>
            <td>
                @record.MoneyChangeTypeId
            </td>
            <td>                
                <a href="records/edit/@record.Id" class="btn btn-primary">Edit</a>
            </td>            
            
        </tr>
    </tbody>
</table>


@code {
    [Parameter]
    public string id { get; set; }
    private MoneyChangeRecord record = new MoneyChangeRecord();
    protected async override Task OnInitializedAsync()
    {
        record = await _unit.MoneyChangeRecords.GetAsync(Convert.ToInt32(id));//todo
    }
    private void BackToList()
    {
        _navigator.NavigateTo("/records/");
    }
    public void GoToEdit()
    {
        _navigator.NavigateTo($"/records/edit/{record.Id}");
    }    
   
}
